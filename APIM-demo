APIM DEMO Controller - 3.10 & NAP 2.0 
 
UDF LABs 
- NGINX Controller 3.10 with BIG-IP - ADC and API security
- NGINX App Protect v2.1 in front of k8s (Modern App)


PRE-CALL : LAB Test / JBOX access  / Devops tools login/ POSTMAN 

DEMO-FLOW
---------
---------


- ARCH EXPLANATION (4 Microservices- Web/APIs) (Estimated time, 5 Min)

- Controller quick walk (core modules , RBAC, Integration etc. (5-10 Min)

-  Controller ADC usecases  (15Min)

      1. Automate applications and Infra Provisoning 
      2. APP1 Automated infra deployment ; Manual publishing via controller
      3. APP2 Automated infra deployment; Publishing using APIs/Postman 
      4. APP3 Complete end to end automated deployment (Infra+publishing) 
      
 - DEPLOY, DEFINE, PUBLISH and TEST APIs (Controller APIM 3.10) (20-25Min)
      
      5. APIs creation
      6. Defining APIs (OAPI/Swagger) 
      7. Publishing APIs
      8. Developer Portal 
      9. API security(JWT)
      10.DashBoard - Overview (analytics)
      
 

NAP DEMO USECASES COVERS (25-30Min)
-----------------------------------

1 Deploying test lab environment (4 Microservices /Arcadia on K8s) 
2 Simulate XSS and SQL injection Attack 
3 Build and implementtion of APP protect with Appprotect , Updated signs & Threat camp 
4 Re-simulate XSS and SQL injection Attack
5 Security logs analysis on ELK stack
6 Trigger Threat campaign attack (Drupal/Jakarta)
7 Threat campaign logs analysis on ELK
8 SVM/CICD workflow deployment of NAP 
9. Implementation of BOT protection policies 
10.Trigger BOT attack 
11.BOT attack logs analysis on ELK 



Total Estimated Time ( 75 Min)







Login to all tools
Connect to Jumhost RDP and Login as user / user
Controller : admin@nginx-udf.internal / admin123!
Jenkins : admin / admin
GitLab : root / F5twister$
(GLAB > JENKINS > Kubernetes & docker)


Create MAIN AND BACKEND APP
----------

GITLAB>MAINAPP>DEPLOY

app_webapp
web application arcadia
production
Submit 


ADD Component main
--------------
cp_mainapp
main app
Gateway : WEB
http://www.arcadia-finance.io/
wl_mainapp
http://mainapp.nginx-udf.internal:30511


ADD Component back
--------------

cp_back
DB backend
Gateway: Web
http://www.arcadia-finance.io/files/
wl_backend
http://backend.nginx-udf.internal:31584


//CHECK ARCADIA WEB SITE


DEPLOY APP2
-----------
GITLAB>APP2>DEPLOY (infra deployed)
POSTMAN - Deploy componenta app2


DEPLOY app3 (full infra + components) 
GITLAB>APP3>DEPLOY

---END-----ADC USECASE 


API - APP
---------

CREATE APP 
----------
app_api
API Application Arcadia
Production Env


API DEFINATION
--------------

arcadia-api-def
Arcadia API Definition
OAS3-Arcadia.yaml (located desktop) 


PUBLISH
-------

prod-api
Production API
ENV: Production
APP* API Application Arcadia 
Gateway Gateway API


ADD Component
-------------

cp_mainapp_api
Component to Mainapp
wl_mainapp_api
http://mainapp.nginx-udf.internal:30511

DRAG UNROUTED TO UNDER COMPONENTS
---------------------------------


TEST-API
--------
- open arcadia app on web browser
- POSTMAN - 


API SECURITY
------------
IDP creation 

CREATE ID SRVICES>IP

jwt-bearer-sso-apm
JWT Bearer SSO

JWT
--- 

{"keys":
    [{
        "k":"ZmFudGFzdGljand0",
        "kty":"oct",
        "kid":"0001"
    }]
}

TOKEN
-----
root@ng1:~# cat quotes.jwt 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjAwMDEifQ.eyJuYW1lIjoiUXVvdGF0aW9uIFN5c3RlbSIsInN1YiI6InF1b3RlcyIsImlzcyI6Ik15IEFQSSBHYXRld2F5In0.ggVOHYnVFB8GVPE-VOIo3jD71gTkLffAY0hQOGXPL2I

Authentication :
Identity provided : JWT Bearer SSO 
Credential location : Bearer

DEVPORTAL
---------
http://10.1.20.12/
http://devportal.arcadia-finance.io
devportalarch
env - prod
gateway - devportal 
Published api - production 
Brand name : API for Arcadia Application

DASHBOARD:
---------

test-dashboard
http-element 
searcch http 
1. htttp.request.count AGG.METHOD : RATE 
2. nginx.http.method.get AGG.METHOD : RATE 



FINISH 



--------------NO -----------USE----------------


CUSTOM FLOW :


API - APP
---------

CREATE APP 
----------
app_api
API Application Arcadia
Production Env


API DEFINATION
--------------

arcadia-api-def
Arcadia API Definition
OAS3-Arcadia.yaml (located desktop) 


PUBLISH
-------

prod-api
Production API
ENV: Production
APP* API Application Arcadia 
Gateway Gateway API


ADD Component
-------------

cp_mainapp_api
Component to Mainapp
wl_mainapp_api
http://mainapp.nginx-udf.internal:30511


TEST-API
--------
- open arcadia app on web browser
- POSTMAN - 


API SECURITY
------------
IDP creation 

CREATE ID SRVICES>IP

jwt-bearer-sso-apm
JWT Bearer SSO

JWT
--- 

{
"keys": [
      {
      "k": "aWxvdmVuZ2lueA",
      "kid": "9876543210",
      "kty": "oct"
      }
   ]
}

Authentication :
Identity provided : JWT Bearer SSO 
Credential location : Bearer

DEVPORTAL
---------

http://10.1.20.12:80
http://devportal.arcadia-finance.io
devportalarch
env - prod
gateway - devportal 
Published api - production 
Brand name : API for Arcadia Application



