
NAP
---
UDF LAB : NGINX App Protect v2.2 in front of k8s (Modern App)
Lab guide is here : https://rtd-nginx-app-protect-udf.readthedocs.io/en/latest/


Deploy and Publish Arcadia application
--------------------------------------

1. SSH (or WebSSH and cd /home/ubuntu/) to CICD Server
cd /home/ubuntu/ && kubectl apply -f /home/ubuntu/Arcadia_k8S/all_apps.yaml && kubectl apply -f /home/ubuntu/k8s_ingress/full_ingress_arcadia.yaml

Simulate Attack on Arcadia K8s
------------------------------

1. ?a=<script> (cross site scripting)
2. {\"$ne\":\"michael@gmail.com\"} (SQL injection)
3. curl -H “1.2.3.4” http://localhost (HTTP compliance) 
4. curl http://localhost/%09 (evasion technique detected -Apache whitespace)
5. curl http://localhost/index.bak (disallowed file) 

//for i in {1..9}; do curl "http://arcadia.192.168.1.25.nip.io?a=<script>"; done



BUILD APP PROTECT 
------------------------
Docker server App protect
-------------------------
Docker server
-------------------------

Docker build (LAB)
$cd /home/ubuntu
$ docker build -t app-protect:tc -f Dockerfile-sig-tc . 
$ docker run -dit --name app-protect -p 80:80 -v /home/ubuntu/nginx.conf:/etc/nginx/nginx.conf app-protect:tc


RE-Simulate Attack on Arcadia NAP DOCKER
----------------------------------------

1. ?a=<script>
2. {\"$ne\":\"michael@gmail.com\"} 

CHECK ELK LOGS --> overview dashboard 

POSTMAN 
Threat camp. Attacks 
1. Jakarta
2. Drupal 

CHECK ELK LOGS --> overview dashboard 


CICD NAP DEPLOYMENT CENTOS7VM
-----------------------------

//INCASE DEPLOYED / sudo yum remove -y app-protect* && sudo yum remove -y nginx-plus* && sudo rm -rf /etc/nginx && sudo rm -rf /var/log/nginx
//Jumphost>GLAB-ansible-deploy (run-pipeline) or gitlab depoy
Create BOT Policy


// $ vi /etc/nginx/policy_bots.json

{
    "policy": {
        "name": "bot_defense_policy",
        "template": {
            "name": "POLICY_TEMPLATE_NGINX_BASE"
        },
        "applicationLanguage": "utf-8",
        "enforcementMode": "blocking",
        "bot-defense": {
            "settings": {
                "isEnabled": true
            },
            "mitigations": {
                "classes": [
                    {
                        "name": "trusted-bot",
                        "action": "alarm"
                    },
                    {
                        "name": "untrusted-bot",
                        "action": "block"
                    },
                    {
                        "name": "malicious-bot",
                        "action": "block"
                    }
                ]
            }
        }
    }
}

// $ app_protect_policy_file "/etc/nginx/policy_bots.json";


// $ nginx -s reload 

// Launch Jmeter desktop - jumphost - open recent or HTTP Request Bots.jmx (Located in folder Desktop > lab-links > jmeter_files)
// ELK , open overview dashboard 
//docker exec -it app-protect more /var/log/nginx/error.log
///services/strategies/balanced_default

///ENABLE NAP COMPONENTS ON CONTROLLER 
/// 1. RUN THIS SCRIPT AND WAIT FOR COUPLE OF MIN
/opt/nginx-controller/helper.sh setfeature AppSec true

///2. Configure controller agent to send NAP events data to controller 
Under extention add "security = True" example below 
vi /etc/controller-agent/agent.conf
[extensions]
configurator = True
metrics = True
Beta = False
security = True





